@page "/deleteinputdialog"
@using ProductLibrary
@using ProductLibrary.Model
@using ProductLibrary.Exceptions
@using ExcelService

@inject ProductRepo repo
@inject NavigationManager NavigationManager

<h3>Введите данные для удаления.</h3>

<div class="row">
  <div class="col">
    <input class="form-control" placeholder="Введите наименование" @bind="name"></input>
  </div>
  <div class="col">
    <input class="form-control" placeholder="Введите производителя" @bind="manufacturer"></input>
  </div>  
</div>

<button class="btn btn-primary" @onclick="Delete">Удалить</button>
<a href="pricelist" class="btn btn-primary">Назад</a>

@code {  
  public string name = "";  
  public string manufacturer = "";
  ExcelService excelService = new(ExcelServiceConstants.BlazorData);

  internal async Task Delete()
  {
    if (ReadStringNotValid(name)) throw new ValidationException($"Значение наименования невалидно.");
    if (ReadStringNotValid(manufacturer)) throw new ValidationException($"Значение производителя невалидно.");    
    try
    {
      repo.Delete(name, manufacturer);
      await excelService.SaveToFileAsync(repo.GetAll(), ExcelServiceConstants.BlazorData, ExcelServiceConstants.PriceListFileName);
    }
    catch (ProductNotFoundException ex)
    { }
    this.NavigationManager.NavigateTo("/pricelist", true);
  }

  static bool ReadStringNotValid(string param)
  {
    if (string.IsNullOrEmpty(param))
      return true;
    else return false;
  }
}
