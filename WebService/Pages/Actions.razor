@page "/Actions"
@using ExcelService
@using ProducstLibrary
@using ProducstLibrary.Exceptions
@using ProducstLibrary.Model

<PageTitle>Actions</PageTitle>

<h1>Что хотите сделать?</h1>

<p>
  <button class="btn btn-primary"           @onclick="Read">Print Product                   </button>  
    Распечатать информацию об продукте из прайс-листа.
</p>

<p>
  <button class="btn btn-primary"         @onclick="Update">Update Product                  </button>
    Обновить информацию об продукте прайс-листа.
</p>

<p>
  <button class="btn btn-primary"            @onclick="Add">Add Product                     </button> 
    Добавить новый продукт в прайс-лист.
</p>

<p> 
  <button class="btn btn-primary"         @onclick="Delete">Delete Product                 </button>
    Удалить продукт из прайс-листа.
</p>

<p>
  <button class="btn btn-primary"       @onclick="PrintAll">Print All Products             </button>
    Распечатать весь прайс-лист.
</p>
 
<p>
  <button class="btn btn-primary" @onclick="GenerateReport">Generate Report                </button>
    Добавить новый файл прайс-листа и сохранить отчет об изменении цен.
</p>

<p>
  <button class="btn btn-primary" @onclick="PrintPriceTags">Print all pricetags            </button>
    Распечатать всe ценники в Excel.
</p>

<p>
  <button class="btn btn-primary"    @onclick="LoadNewFile">Load from new file             </button>
    Загрузить новый прайс-лист.
</p>

<p>
  <button class="btn btn-primary"     @onclick="SortByName">Sort products by name.         </button>
    Отсортировать прайс-лист по названию.
</p>

<p>
  <button class="btn btn-primary"    @onclick="SortByPrice">Sort products by price.        </button>
    Отсортировать прайс-лист по цене
</p>

<p>
  <button class="btn btn-primary"           @onclick="Exit">Exit.                          </button>
    Выход
</p>



@code {
    ProductsRepo<IProduct> repo = new(); 
  ExcelService<IProduct> excelService = new(Environment.CurrentDirectory);
    public int id;
    public string typeName;
    public string name;
    public decimal price;
    public string manufacturer;

    internal void Read()
    {  }

    internal void Update()
    { }

    internal void Add()
    { }

    internal void Delete()
    { }

    internal void PrintAll()
    { }

    internal void GenerateReport()
    { }

    internal void PrintPriceTags()
    {
      excelService.PrintAllPriceTags();
    }

    internal void LoadNewFile()
    { }

    internal void SortByName()
    {
      excelService.SaveToFile(repo.SortedByName(), ExcelServiceConstants.DefaultPriceListSheetName);
    }

    internal void SortByPrice()
    { 
      excelService.SaveToFile(repo.SortedtByPrice(), ExcelServiceConstants.DefaultPriceListSheetName);
    }

    internal void Exit()
    { }    
}

