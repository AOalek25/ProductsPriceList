@page "/addinputdialog"
@using ProductLibrary
@using ProductLibrary.Model
@using ProductLibrary.Exceptions
@using ExcelService

@inject ProductRepo repo
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<h3>Введите данные.</h3>

<div class="row">    
    <div class="col">
      <input class="form-control" placeholder="Введите наименование" @bind="_name" required minlength="2"></input>
    </div>
    <div class="col">
      <input class="form-control" placeholder="Введите производителя" @bind="_manufacturer" required minlength="2"></input>
    </div>
    <div class="col">
      <input class="form-control" placeholder="Введите цену" @bind="_price" required minlength="1"></input>
    </div>
 </div>

 <button class="btn btn-primary" @onclick="Add">Подтвердить</button> 
 <a href="pricelist" class="btn btn-primary">Назад</a> 

@code {    
  private string _name = "";
  private string _price = "";
  private string _manufacturer = "";
  private ExcelService _excelService = new(ExcelServiceConstants.BlazorData);
  
  internal async Task Add()
  {    
    try
    {
      repo.Create(new Product(_name, _manufacturer, _price));
      await _excelService.SaveToFileAsync(repo.GetAll(), ExcelServiceConstants.BlazorData, ExcelServiceConstants.PriceListFileName);
    }
    catch (ValidationException ex)
    {
      await JS.InvokeVoidAsync("alert", ex.Message);
    }
    catch (ProductAlreadyExistException ex)
    { 
      await JS.InvokeVoidAsync("alert", ex.Message);
    }
    catch (InvalidOperationException ex)
    {
      await JS.InvokeVoidAsync("alert", ex.Message);
    }
    this.NavigationManager.NavigateTo("/pricelist", true);
  }
}
